[tool.poetry]
name = "message-shorthand"
version = "0.9.5"
description = "Allows the use short aliases in commit message which are rephrased by long common phrases, such as Coauthor information."
authors = ["Kjeld Schmidt <contact@kjeld-schmidt.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
pytest = "^8.2.2"
ruff = "^0.4.10"

[tool.poe.tasks]
test          = "pytest ."
type-check    = "mypy message_shorthand/"
format        = "ruff format message_shorthand/"
lint          = "ruff check message_shorthand/"
quality-gates = ["format", "lint", "type-check", "test"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # These rules are inherently in conflict with another, so we picked our preference.
    "D203", # one-blank-line-before-class (docstring placement)
    "D212", # multi-line-summary-first-line (docstring formatting)
    # These rules can conflict with the formatter and are handled by it
    # Disabling them is recommended here: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001", "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"**/*_test.py" = ["S101", "D103"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_explicit = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
strict = true
show_error_context = true
warn_redundant_casts = true
warn_unused_ignores = true
pretty = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
